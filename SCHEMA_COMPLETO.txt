-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.Users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  firstName text NOT NULL,
  lastName text,
  email text,
  password text,
  whatsapp text,
  birthDate text,
  gender text,
  maritalStatus text,
  isMinor boolean,
  createdAt timestamp with time zone NOT NULL DEFAULT now(),
  profilePictureUrl text,
  signatureUrl text,
  contractPdfUrl text,
  emailSent boolean DEFAULT false,
  emailSentAt timestamp with time zone,
  whatsappSent boolean DEFAULT false,
  whatsappSentAt timestamp with time zone,
  rol text DEFAULT '''cliente'''::text,
  fingerprint boolean DEFAULT false,
  points_balance integer DEFAULT 0,
  total_purchases numeric DEFAULT 0,
  membership_type character varying,
  name character varying,
  emailConfirmed boolean DEFAULT false,
  emailConfirmedAt timestamp with time zone,
  pendingWelcomeEmail boolean DEFAULT true,
  registrationCompleted boolean DEFAULT false,
  registrationCompletedAt timestamp with time zone,
  processingErrors boolean DEFAULT false,
  updatedAt timestamp with time zone NOT NULL DEFAULT now(),
  createdBy uuid,
  updatedBy uuid,
  CONSTRAINT Users_pkey PRIMARY KEY (id),
  CONSTRAINT Users_createdBy_fkey FOREIGN KEY (createdBy) REFERENCES public.Users(id),
  CONSTRAINT Users_updatedBy_fkey FOREIGN KEY (updatedBy) REFERENCES public.Users(id)
);
CREATE TABLE public.access_control_config (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  enable_biometric boolean DEFAULT true,
  require_active_membership boolean DEFAULT true,
  allow_guest_access boolean DEFAULT false,
  access_schedule_enabled boolean DEFAULT true,
  access_start_time time without time zone DEFAULT '06:00:00'::time without time zone,
  access_end_time time without time zone DEFAULT '23:00:00'::time without time zone,
  access_days_of_week jsonb DEFAULT '["monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]'::jsonb,
  sync_interval_minutes integer DEFAULT 15,
  max_retries integer DEFAULT 3,
  timeout_seconds integer DEFAULT 30,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  zk_websocket_url character varying DEFAULT 'ws://localhost:4001'::character varying,
  zk_capture_timeout integer DEFAULT 15,
  zk_quality character varying DEFAULT 'high'::character varying CHECK (zk_quality::text = ANY (ARRAY['low'::character varying::text, 'medium'::character varying::text, 'high'::character varying::text])),
  auto_sync_enabled boolean DEFAULT true,
  notification_enabled boolean DEFAULT true,
  email_notifications boolean DEFAULT false,
  whatsapp_notifications boolean DEFAULT true,
  log_retention_days integer DEFAULT 90,
  CONSTRAINT access_control_config_pkey PRIMARY KEY (id)
);
CREATE TABLE public.access_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  device_id uuid,
  access_type character varying NOT NULL,
  access_method character varying DEFAULT 'fingerprint'::character varying,
  device_verify_mode integer,
  success boolean NOT NULL DEFAULT true,
  denial_reason character varying,
  membership_status character varying,
  device_timestamp timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT access_logs_pkey PRIMARY KEY (id),
  CONSTRAINT access_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id),
  CONSTRAINT access_logs_device_id_fkey FOREIGN KEY (device_id) REFERENCES public.biometric_devices(id)
);
CREATE TABLE public.addresses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  userId uuid UNIQUE,
  street text,
  number text,
  neighborhood text,
  city text,
  state text,
  postalCode text,
  country text DEFAULT 'México'::text,
  CONSTRAINT addresses_pkey PRIMARY KEY (id),
  CONSTRAINT addresses_userId_fkey FOREIGN KEY (userId) REFERENCES public.Users(id)
);
CREATE TABLE public.biometric_devices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  device_id character varying NOT NULL UNIQUE,
  name character varying NOT NULL,
  device_type character varying NOT NULL,
  ip_address character varying,
  port integer,
  is_active boolean DEFAULT true,
  location_description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  serial_number text UNIQUE,
  CONSTRAINT biometric_devices_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cash_cuts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cut_number character varying NOT NULL UNIQUE,
  cut_date date NOT NULL,
  cut_time timestamp without time zone DEFAULT now(),
  pos_efectivo numeric DEFAULT 0,
  pos_transferencia numeric DEFAULT 0,
  pos_debito numeric DEFAULT 0,
  pos_credito numeric DEFAULT 0,
  pos_mixto numeric DEFAULT 0,
  pos_total numeric DEFAULT 0,
  pos_transactions integer DEFAULT 0,
  pos_commissions numeric DEFAULT 0,
  membership_efectivo numeric DEFAULT 0,
  membership_transferencia numeric DEFAULT 0,
  membership_debito numeric DEFAULT 0,
  membership_credito numeric DEFAULT 0,
  membership_mixto numeric DEFAULT 0,
  membership_total numeric DEFAULT 0,
  membership_transactions integer DEFAULT 0,
  membership_commissions numeric DEFAULT 0,
  total_efectivo numeric DEFAULT 0,
  total_transferencia numeric DEFAULT 0,
  total_debito numeric DEFAULT 0,
  total_credito numeric DEFAULT 0,
  total_mixto numeric DEFAULT 0,
  grand_total numeric DEFAULT 0,
  total_transactions integer DEFAULT 0,
  total_commissions numeric DEFAULT 0,
  net_amount numeric DEFAULT 0,
  expenses_amount numeric DEFAULT 0,
  final_balance numeric DEFAULT 0,
  status character varying DEFAULT 'open'::character varying CHECK (status::text = ANY (ARRAY['open'::text, 'closed'::text, 'edited'::text])),
  is_manual boolean DEFAULT false,
  notes text,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid NOT NULL,
  updated_at timestamp without time zone DEFAULT now(),
  updated_by uuid,
  closed_at timestamp without time zone,
  closed_by uuid,
  abonos_efectivo numeric DEFAULT 0,
  abonos_transferencia numeric DEFAULT 0,
  abonos_debito numeric DEFAULT 0,
  abonos_credito numeric DEFAULT 0,
  abonos_mixto numeric DEFAULT 0,
  abonos_total numeric DEFAULT 0,
  abonos_transactions integer DEFAULT 0,
  abonos_commissions numeric DEFAULT 0,
  CONSTRAINT cash_cuts_pkey PRIMARY KEY (id),
  CONSTRAINT cash_cuts_closed_by_fkey FOREIGN KEY (closed_by) REFERENCES public.Users(id),
  CONSTRAINT cash_cuts_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT cash_cuts_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  subcategories jsonb DEFAULT '[]'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.client_announcements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  message text NOT NULL,
  type character varying NOT NULL DEFAULT 'info'::character varying,
  priority integer NOT NULL DEFAULT 0,
  is_active boolean NOT NULL DEFAULT true,
  start_date timestamp with time zone,
  end_date timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT client_announcements_pkey PRIMARY KEY (id),
  CONSTRAINT client_announcements_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id)
);
CREATE TABLE public.coupons (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code character varying NOT NULL UNIQUE,
  description text,
  discount_type character varying DEFAULT 'percentage'::character varying,
  discount_value numeric NOT NULL,
  min_amount numeric DEFAULT 0,
  max_uses integer,
  current_uses integer DEFAULT 0,
  start_date date,
  end_date date,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT coupons_pkey PRIMARY KEY (id),
  CONSTRAINT coupons_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id)
);
CREATE TABLE public.device_user_mappings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  device_id character varying NOT NULL,
  device_user_id integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_active boolean DEFAULT true,
  CONSTRAINT device_user_mappings_pkey PRIMARY KEY (id),
  CONSTRAINT device_user_mappings_user_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id)
);
CREATE TABLE public.emergency_contacts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  userId uuid UNIQUE,
  name text,
  phone text,
  medicalCondition text,
  bloodType text,
  CONSTRAINT emergency_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT emergency_contacts_userId_fkey FOREIGN KEY (userId) REFERENCES public.Users(id)
);
CREATE TABLE public.employees (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  birth_date date,
  gender text,
  marital_status text,
  phone text,
  street text,
  number text,
  neighborhood text,
  city text,
  state text,
  postal_code text,
  country text DEFAULT 'México'::text,
  position text NOT NULL,
  department text,
  hire_date date NOT NULL DEFAULT CURRENT_DATE,
  salary numeric,
  status text DEFAULT 'active'::text,
  emergency_contact_name text,
  emergency_contact_phone text,
  emergency_contact_relationship text,
  fingerprint boolean DEFAULT false,
  fingerprint_enrolled_at timestamp with time zone,
  profile_picture_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  firstname text,
  lastname text,
  email text,
  CONSTRAINT employees_pkey PRIMARY KEY (id),
  CONSTRAINT employees_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id),
  CONSTRAINT employees_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id)
);
CREATE TABLE public.exercise_variants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  exercise_id uuid,
  type character varying,
  name character varying,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT exercise_variants_pkey PRIMARY KEY (id),
  CONSTRAINT exercise_variants_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.exercises (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  type character varying NOT NULL,
  primary_muscles ARRAY,
  secondary_muscles ARRAY,
  material character varying,
  level character varying,
  muscle_group_id uuid,
  initial_position text,
  execution_eccentric text,
  execution_isometric text,
  execution_concentric text,
  common_errors ARRAY,
  contraindications ARRAY,
  video_url text,
  image_url text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT exercises_pkey PRIMARY KEY (id),
  CONSTRAINT exercises_muscle_group_id_fkey FOREIGN KEY (muscle_group_id) REFERENCES public.muscle_groups(id)
);
CREATE TABLE public.expenses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  expense_date date NOT NULL,
  expense_time timestamp without time zone NOT NULL DEFAULT now(),
  expense_type character varying NOT NULL CHECK (expense_type::text = ANY (ARRAY['nomina'::character varying::text, 'suplementos'::character varying::text, 'servicios'::character varying::text, 'mantenimiento'::character varying::text, 'limpieza'::character varying::text, 'marketing'::character varying::text, 'equipamiento'::character varying::text, 'otros'::character varying::text])),
  description text NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  receipt_number character varying,
  notes text,
  status character varying NOT NULL DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying::text, 'deleted'::character varying::text, 'pending'::character varying::text])),
  created_at timestamp without time zone NOT NULL DEFAULT now(),
  created_by uuid NOT NULL,
  updated_at timestamp without time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT expenses_pkey PRIMARY KEY (id),
  CONSTRAINT expenses_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT expenses_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.fingerprint_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  template text NOT NULL,
  device_user_id integer,
  enrolled_at timestamp without time zone DEFAULT now(),
  finger_index integer DEFAULT 1,
  finger_name character varying DEFAULT 'Índice Derecho'::character varying,
  primary_template text,
  verification_template text,
  backup_template text,
  combined_template jsonb,
  average_quality integer DEFAULT 85,
  capture_count integer DEFAULT 1,
  capture_time_ms integer DEFAULT 0,
  device_info jsonb DEFAULT '{}'::jsonb,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT fingerprint_templates_pkey PRIMARY KEY (id),
  CONSTRAINT fingerprint_templates_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id)
);
CREATE TABLE public.fingerprint_templates_backup_20250105 (
  id uuid,
  user_id uuid,
  template text,
  device_user_id integer,
  enrolled_at timestamp without time zone,
  finger_index integer,
  finger_name character varying,
  primary_template text,
  verification_template text,
  backup_template text,
  combined_template jsonb,
  average_quality integer,
  capture_count integer,
  capture_time_ms integer,
  device_info jsonb,
  updated_at timestamp without time zone
);
CREATE TABLE public.gym_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  gym_name text NOT NULL DEFAULT 'Muscle Up GYM'::text,
  gym_address text NOT NULL DEFAULT 'Francisco I. Madero 708, Colonia Lindavista, San Buenaventura, Coahuila, México'::text,
  gym_phone text NOT NULL DEFAULT '866 112 7905'::text,
  gym_email text,
  gym_logo_url text,
  gym_facebook_url text NOT NULL DEFAULT 'https://www.facebook.com/Lindavistagym'::text,
  gym_maps_url text NOT NULL DEFAULT 'https://maps.app.goo.gl/preWqm3w7S2JZLg17'::text,
  gym_hours jsonb NOT NULL DEFAULT '{"friday": {"open": "06:00", "close": "23:00", "enabled": true}, "monday": {"open": "06:00", "close": "23:00", "enabled": true}, "sunday": {"open": "06:00", "close": "23:00", "enabled": false}, "tuesday": {"open": "06:00", "close": "23:00", "enabled": true}, "saturday": {"open": "06:00", "close": "23:00", "enabled": true}, "thursday": {"open": "06:00", "close": "23:00", "enabled": true}, "wednesday": {"open": "06:00", "close": "23:00", "enabled": true}}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  max_capacity integer DEFAULT 100,
  CONSTRAINT gym_settings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.holidays (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  date date NOT NULL,
  name character varying NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['official'::character varying, 'traditional'::character varying, 'special'::character varying]::text[])),
  emoji character varying DEFAULT '🎉'::character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT holidays_pkey PRIMARY KEY (id)
);
CREATE TABLE public.inventory_movements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid NOT NULL,
  movement_type character varying NOT NULL CHECK (movement_type::text = ANY (ARRAY['inventario_inicial'::character varying, 'recepcion_compra'::character varying, 'ajuste_manual_mas'::character varying, 'transferencia_entrada'::character varying, 'venta_directa'::character varying, 'venta_apartado'::character varying, 'ajuste_manual_menos'::character varying, 'merma'::character varying, 'transferencia_salida'::character varying, 'reserva_apartado'::character varying, 'cancelar_reserva'::character varying, 'devolucion_cliente'::character varying, 'traspaso_salida'::character varying, 'traspaso_entrada'::character varying, 'reabastecimiento_auto'::character varying, 'consolidacion_inventario'::character varying, 'transferencia_directa'::character varying, 'distribucion_central'::character varying]::text[])),
  quantity integer NOT NULL,
  previous_stock integer,
  new_stock integer,
  unit_cost numeric DEFAULT 0,
  total_cost numeric DEFAULT 0,
  reason character varying,
  reference_id uuid,
  notes text,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  source_warehouse_id uuid,
  target_warehouse_id uuid,
  transfer_batch_id uuid,
  auto_generated boolean DEFAULT false,
  skip_stock_processing boolean DEFAULT false,
  CONSTRAINT inventory_movements_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_movements_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT inventory_movements_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT inventory_movements_source_warehouse_id_fkey FOREIGN KEY (source_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT inventory_movements_target_warehouse_id_fkey FOREIGN KEY (target_warehouse_id) REFERENCES public.warehouses(id)
);
CREATE TABLE public.layaway_status_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  layaway_id uuid NOT NULL,
  previous_status character varying,
  new_status character varying,
  previous_paid_amount numeric,
  new_paid_amount numeric,
  reason text,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid NOT NULL,
  CONSTRAINT layaway_status_history_pkey PRIMARY KEY (id),
  CONSTRAINT layaway_status_history_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT layaway_status_history_layaway_id_fkey FOREIGN KEY (layaway_id) REFERENCES public.sales(id)
);
CREATE TABLE public.membership_change_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  device_id text NOT NULL DEFAULT 'F22_001'::text,
  change_type text NOT NULL,
  reason text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  processed boolean NOT NULL DEFAULT false,
  processed_at timestamp with time zone,
  error_message text,
  success boolean,
  CONSTRAINT membership_change_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.membership_info (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  userId uuid UNIQUE,
  referredBy text,
  mainMotivation text,
  receivePlans boolean,
  trainingLevel text,
  CONSTRAINT membership_info_pkey PRIMARY KEY (id),
  CONSTRAINT membership_info_userId_fkey FOREIGN KEY (userId) REFERENCES public.Users(id)
);
CREATE TABLE public.membership_payment_details (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  membership_id uuid,
  payment_method character varying NOT NULL,
  amount numeric NOT NULL,
  commission_rate numeric DEFAULT 0,
  commission_amount numeric DEFAULT 0,
  payment_reference character varying,
  sequence_order integer DEFAULT 1,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp with time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT membership_payment_details_pkey PRIMARY KEY (id),
  CONSTRAINT membership_payment_details_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT membership_payment_details_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT membership_payment_details_membership_id_fkey FOREIGN KEY (membership_id) REFERENCES public.user_memberships(id)
);
CREATE TABLE public.membership_plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  is_active boolean DEFAULT true,
  inscription_price numeric DEFAULT 0,
  visit_price numeric DEFAULT 0,
  weekly_price numeric DEFAULT 0,
  biweekly_price numeric DEFAULT 0,
  monthly_price numeric DEFAULT 0,
  bimonthly_price numeric DEFAULT 0,
  quarterly_price numeric DEFAULT 0,
  semester_price numeric DEFAULT 0,
  annual_price numeric DEFAULT 0,
  weekly_duration integer DEFAULT 7,
  biweekly_duration integer DEFAULT 15,
  monthly_duration integer DEFAULT 30,
  bimonthly_duration integer DEFAULT 60,
  quarterly_duration integer DEFAULT 90,
  semester_duration integer DEFAULT 180,
  annual_duration integer DEFAULT 365,
  validity_type character varying DEFAULT 'permanent'::character varying,
  validity_start_date date,
  validity_end_date date,
  features jsonb DEFAULT '[]'::jsonb,
  gym_access boolean DEFAULT true,
  classes_included boolean DEFAULT false,
  guest_passes integer DEFAULT 0,
  equipment_access jsonb DEFAULT '[]'::jsonb,
  has_time_restrictions boolean DEFAULT false,
  allowed_days jsonb DEFAULT '[]'::jsonb,
  time_slots jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp with time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT membership_plans_pkey PRIMARY KEY (id),
  CONSTRAINT membership_plans_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT membership_plans_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.muscle_groups (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT muscle_groups_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['sale_completed'::character varying, 'sale_cancelled'::character varying, 'layaway_created'::character varying, 'layaway_payment_received'::character varying, 'layaway_completed'::character varying, 'layaway_expired'::character varying, 'sale_refunded'::character varying, 'membership_created'::character varying, 'membership_expiring_soon'::character varying, 'membership_expired'::character varying, 'membership_renewed'::character varying, 'membership_frozen'::character varying, 'membership_unfrozen'::character varying, 'membership_cancelled'::character varying, 'membership_payment_pending'::character varying, 'low_stock_alert'::character varying, 'product_out_of_stock'::character varying, 'system_message'::character varying, 'admin_alert'::character varying]::text[])),
  title character varying NOT NULL,
  message text NOT NULL,
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  priority character varying DEFAULT 'normal'::character varying CHECK (priority::text = ANY (ARRAY['low'::character varying, 'normal'::character varying, 'high'::character varying, 'urgent'::character varying]::text[])),
  action_url character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id)
);
CREATE TABLE public.payment_commissions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  payment_method character varying NOT NULL,
  commission_type character varying DEFAULT 'percentage'::character varying,
  commission_value numeric NOT NULL DEFAULT 0,
  min_amount numeric DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT payment_commissions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.plan_access_restrictions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_id uuid NOT NULL,
  access_control_enabled boolean DEFAULT true,
  max_daily_entries integer DEFAULT 1,
  daily_schedules jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT plan_access_restrictions_pkey PRIMARY KEY (id),
  CONSTRAINT plan_access_restrictions_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.membership_plans(id),
  CONSTRAINT plan_access_restrictions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT plan_access_restrictions_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.plan_f22_group_mappings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  plan_id uuid NOT NULL,
  device_id text NOT NULL,
  f22_group_id integer NOT NULL CHECK (f22_group_id >= 3),
  f22_timezone_id integer NOT NULL,
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT plan_f22_group_mappings_pkey PRIMARY KEY (id),
  CONSTRAINT plan_f22_group_mappings_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.membership_plans(id)
);
CREATE TABLE public.product_warehouse_stock (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid NOT NULL,
  warehouse_id uuid NOT NULL,
  current_stock integer NOT NULL DEFAULT 0 CHECK (current_stock >= 0),
  reserved_stock integer DEFAULT 0 CHECK (reserved_stock >= 0),
  available_stock integer DEFAULT (current_stock - reserved_stock),
  min_stock integer DEFAULT 0,
  max_stock integer DEFAULT 1000,
  reorder_point integer DEFAULT 0,
  reorder_quantity integer DEFAULT 0,
  avg_cost numeric DEFAULT 0,
  last_cost numeric DEFAULT 0,
  location_code character varying,
  location_description text,
  last_movement_at timestamp with time zone,
  last_restock_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_warehouse_stock_pkey PRIMARY KEY (id),
  CONSTRAINT product_warehouse_stock_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT product_warehouse_stock_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  sku character varying UNIQUE,
  barcode character varying UNIQUE,
  category character varying NOT NULL,
  subcategory character varying,
  brand character varying,
  cost_price numeric NOT NULL DEFAULT 0 CHECK (cost_price >= 0::numeric),
  sale_price numeric NOT NULL DEFAULT 0 CHECK (sale_price >= 0::numeric),
  profit_margin numeric DEFAULT 0,
  current_stock integer DEFAULT 0 CHECK (current_stock >= 0),
  min_stock integer DEFAULT 0 CHECK (min_stock >= 0),
  max_stock integer DEFAULT 1000,
  unit character varying DEFAULT 'pieza'::character varying,
  supplier_id uuid,
  image_url text,
  images jsonb DEFAULT '[]'::jsonb,
  is_active boolean DEFAULT true,
  is_taxable boolean DEFAULT true,
  tax_rate numeric DEFAULT 16 CHECK (tax_rate >= 0::numeric AND tax_rate <= 100::numeric),
  variants jsonb DEFAULT '[]'::jsonb,
  location character varying,
  expiry_date date,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp without time zone DEFAULT now(),
  updated_by uuid,
  reserved_stock integer DEFAULT 0 CHECK (reserved_stock >= 0),
  warehouse_stocks jsonb DEFAULT '{}'::jsonb,
  default_warehouse_id uuid,
  total_system_stock integer DEFAULT 0,
  auto_restock_enabled boolean DEFAULT false,
  restock_point integer DEFAULT 0,
  restock_quantity integer DEFAULT 0,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT products_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT products_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id),
  CONSTRAINT products_default_warehouse_id_fkey FOREIGN KEY (default_warehouse_id) REFERENCES public.warehouses(id)
);
CREATE TABLE public.purchase_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  supplier_id uuid NOT NULL,
  order_number character varying NOT NULL UNIQUE,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying::text, 'sent'::character varying::text, 'received'::character varying::text, 'cancelled'::character varying::text])),
  total_amount numeric DEFAULT 0,
  tax_amount numeric DEFAULT 0,
  grand_total numeric DEFAULT 0,
  expected_delivery date,
  received_date date,
  notes text,
  items jsonb DEFAULT '[]'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp without time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT purchase_orders_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_orders_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT purchase_orders_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT purchase_orders_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.refund_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  refund_id uuid NOT NULL,
  sale_item_id uuid NOT NULL,
  quantity_refunded integer NOT NULL CHECK (quantity_refunded > 0),
  refund_amount numeric NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT refund_items_pkey PRIMARY KEY (id),
  CONSTRAINT refund_items_sale_item_id_fkey FOREIGN KEY (sale_item_id) REFERENCES public.sale_items(id),
  CONSTRAINT refund_items_refund_id_fkey FOREIGN KEY (refund_id) REFERENCES public.refunds(id)
);
CREATE TABLE public.refunds (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sale_id uuid NOT NULL,
  refund_number character varying NOT NULL UNIQUE,
  refund_type character varying NOT NULL CHECK (refund_type::text = ANY (ARRAY['total'::character varying::text, 'partial'::character varying::text, 'exchange'::character varying::text])),
  total_refunded numeric NOT NULL DEFAULT 0,
  reason text,
  processed_by uuid,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT refunds_pkey PRIMARY KEY (id),
  CONSTRAINT refunds_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES public.Users(id),
  CONSTRAINT refunds_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES public.sales(id)
);
CREATE TABLE public.routine_exercises (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  routine_id uuid NOT NULL,
  exercise_id uuid NOT NULL,
  order_index integer NOT NULL,
  sets integer NOT NULL DEFAULT 3,
  reps character varying,
  rest_seconds integer,
  notes text,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT routine_exercises_pkey PRIMARY KEY (id),
  CONSTRAINT routine_exercises_routine_id_fkey FOREIGN KEY (routine_id) REFERENCES public.workout_routines(id),
  CONSTRAINT routine_exercises_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.routine_progress (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_routine_id uuid NOT NULL,
  routine_exercise_id uuid NOT NULL,
  workout_date date NOT NULL DEFAULT CURRENT_DATE,
  completed_sets integer,
  weight_used numeric,
  actual_reps character varying,
  notes text,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT routine_progress_pkey PRIMARY KEY (id),
  CONSTRAINT routine_progress_user_routine_id_fkey FOREIGN KEY (user_routine_id) REFERENCES public.user_routines(id),
  CONSTRAINT routine_progress_routine_exercise_id_fkey FOREIGN KEY (routine_exercise_id) REFERENCES public.routine_exercises(id)
);
CREATE TABLE public.sale_edit_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sale_id uuid NOT NULL,
  edited_by uuid NOT NULL,
  changes_summary text,
  previous_total numeric,
  new_total numeric,
  edit_reason text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT sale_edit_history_pkey PRIMARY KEY (id),
  CONSTRAINT sale_edit_history_edited_by_fkey FOREIGN KEY (edited_by) REFERENCES public.Users(id),
  CONSTRAINT sale_edit_history_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES public.sales(id)
);
CREATE TABLE public.sale_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sale_id uuid NOT NULL,
  product_id uuid NOT NULL,
  product_name character varying NOT NULL,
  product_sku character varying,
  quantity integer NOT NULL CHECK (quantity > 0),
  unit_price numeric NOT NULL CHECK (unit_price >= 0::numeric),
  total_price numeric NOT NULL,
  discount_amount numeric DEFAULT 0,
  tax_rate numeric DEFAULT 16,
  tax_amount numeric DEFAULT 0,
  created_at timestamp without time zone DEFAULT now(),
  source_warehouse_id uuid,
  CONSTRAINT sale_items_pkey PRIMARY KEY (id),
  CONSTRAINT sale_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT sale_items_source_warehouse_id_fkey FOREIGN KEY (source_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT sale_items_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES public.sales(id)
);
CREATE TABLE public.sale_payment_details (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sale_id uuid NOT NULL,
  payment_method character varying NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  payment_reference character varying,
  commission_rate numeric DEFAULT 0,
  commission_amount numeric DEFAULT 0,
  sequence_order integer DEFAULT 1,
  payment_date timestamp without time zone DEFAULT now(),
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  is_partial_payment boolean DEFAULT false,
  payment_sequence integer DEFAULT 1,
  notes text,
  CONSTRAINT sale_payment_details_pkey PRIMARY KEY (id),
  CONSTRAINT sale_payment_details_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT sale_payment_details_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES public.sales(id)
);
CREATE TABLE public.sales (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sale_number character varying NOT NULL UNIQUE,
  customer_id uuid,
  cashier_id uuid NOT NULL,
  sale_type character varying DEFAULT 'normal'::character varying CHECK (sale_type::text = ANY (ARRAY['sale'::character varying::text, 'layaway'::character varying::text])),
  subtotal numeric NOT NULL DEFAULT 0,
  tax_amount numeric DEFAULT 0,
  discount_amount numeric DEFAULT 0,
  coupon_discount numeric DEFAULT 0,
  coupon_code character varying,
  total_amount numeric NOT NULL DEFAULT 0,
  required_deposit numeric DEFAULT 0,
  paid_amount numeric DEFAULT 0,
  pending_amount numeric DEFAULT 0,
  deposit_percentage numeric DEFAULT 50,
  layaway_expires_at timestamp without time zone,
  status character varying DEFAULT 'completed'::character varying CHECK (status::text = ANY (ARRAY['completed'::character varying::text, 'pending'::character varying::text, 'cancelled'::character varying::text, 'refunded'::character varying::text, 'expired'::character varying::text])),
  payment_status character varying DEFAULT 'paid'::character varying CHECK (payment_status::text = ANY (ARRAY['paid'::character varying, 'partial'::character varying, 'pending'::character varying, 'refunded'::character varying]::text[])),
  is_mixed_payment boolean DEFAULT false,
  payment_received numeric DEFAULT 0,
  change_amount numeric DEFAULT 0,
  commission_rate numeric DEFAULT 0,
  commission_amount numeric DEFAULT 0,
  notes text,
  receipt_printed boolean DEFAULT false,
  created_at timestamp without time zone DEFAULT now(),
  completed_at timestamp without time zone,
  updated_at timestamp without time zone DEFAULT now(),
  custom_commission_rate numeric,
  skip_inscription boolean DEFAULT false,
  cancellation_date timestamp without time zone,
  payment_plan_days integer,
  initial_payment numeric DEFAULT 0,
  expiration_date date,
  last_payment_date timestamp without time zone,
  cancellation_reason text,
  cancelled_by uuid,
  refund_amount numeric DEFAULT 0,
  refund_method character varying,
  cancellation_fee numeric DEFAULT 0,
  email_sent boolean DEFAULT false,
  payment_date timestamp without time zone,
  updated_by uuid,
  requires_stock_reservation boolean DEFAULT false,
  stock_reserved_at timestamp with time zone,
  stock_released_at timestamp with time zone,
  source_warehouse_id uuid,
  cancel_reason text,
  cancelled_at timestamp with time zone,
  refund_reference text,
  penalty_amount numeric,
  CONSTRAINT sales_pkey PRIMARY KEY (id),
  CONSTRAINT sales_cancelled_by_fkey FOREIGN KEY (cancelled_by) REFERENCES public.Users(id),
  CONSTRAINT sales_cashier_id_fkey FOREIGN KEY (cashier_id) REFERENCES public.Users(id),
  CONSTRAINT sales_coupon_code_fkey FOREIGN KEY (coupon_code) REFERENCES public.coupons(code),
  CONSTRAINT sales_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.Users(id),
  CONSTRAINT sales_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id),
  CONSTRAINT sales_source_warehouse_id_fkey FOREIGN KEY (source_warehouse_id) REFERENCES public.warehouses(id)
);
CREATE TABLE public.special_access_schedules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  date date NOT NULL UNIQUE,
  is_holiday boolean DEFAULT false,
  is_closed boolean DEFAULT false,
  special_start_time time without time zone,
  special_end_time time without time zone,
  description text,
  applies_to_plans jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT special_access_schedules_pkey PRIMARY KEY (id)
);
CREATE TABLE public.store_credits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  balance numeric NOT NULL CHECK (balance >= 0::numeric),
  reason text,
  expiration_date date,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid NOT NULL,
  used_at timestamp without time zone,
  used_by uuid,
  CONSTRAINT store_credits_pkey PRIMARY KEY (id),
  CONSTRAINT store_credits_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT store_credits_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.Users(id),
  CONSTRAINT store_credits_used_by_fkey FOREIGN KEY (used_by) REFERENCES public.Users(id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_name character varying NOT NULL,
  contact_person character varying,
  email character varying,
  phone character varying,
  whatsapp character varying,
  website character varying,
  rfc character varying,
  address jsonb DEFAULT '{}'::jsonb,
  payment_terms character varying DEFAULT 'contado'::character varying,
  credit_limit numeric DEFAULT 0,
  current_balance numeric DEFAULT 0,
  rating integer DEFAULT 5 CHECK (rating >= 1 AND rating <= 5),
  is_active boolean DEFAULT true,
  categories jsonb DEFAULT '[]'::jsonb,
  delivery_time integer DEFAULT 7,
  notes text,
  documents jsonb DEFAULT '[]'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp without time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT suppliers_pkey PRIMARY KEY (id),
  CONSTRAINT suppliers_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT suppliers_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.survey_questions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  survey_id uuid NOT NULL,
  question_text text NOT NULL,
  question_type character varying NOT NULL,
  options jsonb,
  is_required boolean NOT NULL DEFAULT false,
  question_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT survey_questions_pkey PRIMARY KEY (id),
  CONSTRAINT survey_questions_survey_id_fkey FOREIGN KEY (survey_id) REFERENCES public.surveys(id)
);
CREATE TABLE public.survey_responses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  survey_id uuid NOT NULL,
  user_id uuid NOT NULL,
  question_id uuid NOT NULL,
  answer_text text,
  answer_option character varying,
  submitted_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT survey_responses_pkey PRIMARY KEY (id),
  CONSTRAINT survey_responses_survey_id_fkey FOREIGN KEY (survey_id) REFERENCES public.surveys(id),
  CONSTRAINT survey_responses_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id),
  CONSTRAINT survey_responses_question_id_fkey FOREIGN KEY (question_id) REFERENCES public.survey_questions(id)
);
CREATE TABLE public.surveys (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text,
  start_date timestamp with time zone NOT NULL,
  end_date timestamp with time zone NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  max_responses_per_user integer DEFAULT 1,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT surveys_pkey PRIMARY KEY (id),
  CONSTRAINT surveys_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id)
);
CREATE TABLE public.system_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  action_type character varying NOT NULL,
  description text,
  affected_records integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  created_by uuid,
  CONSTRAINT system_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.temporary_access (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  guest_name character varying,
  guest_phone character varying,
  sponsor_user_id uuid NOT NULL,
  access_type character varying DEFAULT 'guest'::character varying CHECK (access_type::text = ANY (ARRAY['guest'::character varying::text, 'trial'::character varying::text, 'maintenance'::character varying::text, 'staff'::character varying::text])),
  valid_from timestamp with time zone DEFAULT now(),
  valid_until timestamp with time zone NOT NULL,
  max_entries integer DEFAULT 1,
  current_entries integer DEFAULT 0,
  access_code character varying UNIQUE,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT temporary_access_pkey PRIMARY KEY (id),
  CONSTRAINT temporary_access_sponsor_fkey FOREIGN KEY (sponsor_user_id) REFERENCES public.Users(id),
  CONSTRAINT temporary_access_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id)
);
CREATE TABLE public.trigger_logs (
  id bigint NOT NULL DEFAULT nextval('trigger_logs_id_seq'::regclass),
  user_id uuid,
  trigger_type text NOT NULL,
  status text NOT NULL,
  details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT trigger_logs_pkey PRIMARY KEY (id),
  CONSTRAINT trigger_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_memberships (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  userid uuid,
  payment_type character varying NOT NULL,
  total_amount numeric NOT NULL,
  inscription_amount numeric DEFAULT 0,
  start_date date NOT NULL,
  end_date date,
  status character varying DEFAULT 'active'::character varying,
  freeze_start_date date,
  freeze_end_date date,
  freeze_reason text,
  total_visits integer DEFAULT 1,
  remaining_visits integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp with time zone DEFAULT now(),
  notes text,
  coupon_code character varying,
  is_renewal boolean DEFAULT false,
  skip_inscription boolean DEFAULT false,
  freeze_date date,
  unfreeze_date date,
  total_frozen_days integer DEFAULT 0,
  plan_id uuid,
  updated_by uuid,
  paid_amount numeric DEFAULT 0,
  pending_amount numeric DEFAULT 0,
  whatsapp_sent boolean DEFAULT false,
  whatsapp_sent_at timestamp with time zone,
  CONSTRAINT user_memberships_pkey PRIMARY KEY (id),
  CONSTRAINT user_memberships_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT user_memberships_userid_fkey FOREIGN KEY (userid) REFERENCES public.Users(id),
  CONSTRAINT user_memberships_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.membership_plans(id),
  CONSTRAINT user_memberships_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.user_routines (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  routine_id uuid NOT NULL,
  assigned_by uuid,
  assigned_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  start_date date,
  end_date date,
  status character varying DEFAULT 'active'::character varying,
  notes text,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_routines_pkey PRIMARY KEY (id),
  CONSTRAINT user_routines_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.Users(id),
  CONSTRAINT user_routines_routine_id_fkey FOREIGN KEY (routine_id) REFERENCES public.workout_routines(id),
  CONSTRAINT user_routines_assigned_by_fkey FOREIGN KEY (assigned_by) REFERENCES public.Users(id)
);
CREATE TABLE public.warehouse_transfer_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  transfer_id uuid NOT NULL,
  product_id uuid NOT NULL,
  requested_quantity integer NOT NULL,
  approved_quantity integer DEFAULT 0,
  shipped_quantity integer DEFAULT 0,
  received_quantity integer DEFAULT 0,
  unit_cost numeric DEFAULT 0 CHECK (unit_cost >= 0::numeric),
  total_cost numeric DEFAULT ((received_quantity)::numeric * unit_cost),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT warehouse_transfer_items_pkey PRIMARY KEY (id),
  CONSTRAINT warehouse_transfer_items_transfer_fkey FOREIGN KEY (transfer_id) REFERENCES public.warehouse_transfers(id),
  CONSTRAINT warehouse_transfer_items_product_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.warehouse_transfers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  transfer_number character varying NOT NULL UNIQUE,
  source_warehouse_id uuid NOT NULL,
  target_warehouse_id uuid NOT NULL,
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'approved'::character varying, 'in_transit'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])),
  transfer_type character varying NOT NULL DEFAULT 'manual'::character varying CHECK (transfer_type::text = ANY (ARRAY['manual'::character varying, 'automatic'::character varying, 'emergency'::character varying, 'restock'::character varying]::text[])),
  priority character varying NOT NULL DEFAULT 'normal'::character varying CHECK (priority::text = ANY (ARRAY['low'::character varying, 'normal'::character varying, 'high'::character varying, 'urgent'::character varying]::text[])),
  reason text,
  notes text,
  total_items integer NOT NULL DEFAULT 0,
  total_quantity integer NOT NULL DEFAULT 0,
  total_value numeric DEFAULT 0,
  requested_at timestamp with time zone NOT NULL DEFAULT now(),
  approved_at timestamp with time zone,
  shipped_at timestamp with time zone,
  received_at timestamp with time zone,
  cancelled_at timestamp with time zone,
  created_by uuid,
  approved_by uuid,
  shipped_by uuid,
  received_by uuid,
  cancelled_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT warehouse_transfers_pkey PRIMARY KEY (id),
  CONSTRAINT warehouse_transfers_source_fkey FOREIGN KEY (source_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT warehouse_transfers_target_fkey FOREIGN KEY (target_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT warehouse_transfers_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT warehouse_transfers_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.warehouses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code character varying NOT NULL UNIQUE,
  name character varying NOT NULL,
  description text,
  address jsonb DEFAULT '{}'::jsonb,
  warehouse_type character varying NOT NULL CHECK (warehouse_type::text = ANY (ARRAY['central'::character varying, 'store'::character varying, 'temporary'::character varying]::text[])),
  is_active boolean DEFAULT true,
  is_default boolean DEFAULT false,
  manager_user_id uuid,
  auto_restock_enabled boolean DEFAULT false,
  min_stock_threshold numeric DEFAULT 0.2,
  max_capacity integer,
  current_capacity integer DEFAULT 0,
  operating_hours jsonb DEFAULT '{}'::jsonb,
  time_zone character varying DEFAULT 'America/Mexico_City'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_at timestamp with time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT warehouses_pkey PRIMARY KEY (id),
  CONSTRAINT warehouses_manager_user_id_fkey FOREIGN KEY (manager_user_id) REFERENCES public.Users(id),
  CONSTRAINT warehouses_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id),
  CONSTRAINT warehouses_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.Users(id)
);
CREATE TABLE public.workout_routines (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  difficulty_level character varying,
  estimated_duration integer,
  muscle_group_focus character varying,
  created_by uuid,
  is_public boolean DEFAULT false,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT workout_routines_pkey PRIMARY KEY (id),
  CONSTRAINT workout_routines_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.Users(id)
);